# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecr: circleci/aws-ecr@8.2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your j2023.05ob to build and test your app, you can rename and customize it as you want.
  build-and-push-old:
    docker:
      - image: cimg/aws:2023.05
    environment:
      ACCOUNT_ID: ${ACCOUNT_ID}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    steps:
      - checkout
      - aws-cli/setup
      - aws-cli/role_arn_setup:
          profile_name: default
          role_arn: "arn:aws:iam::${ACCOUNT_ID}:role/CI_Role"
          #aws-region: "eu-west-1"
          # optional parameters
          #profile-name: "OIDC-PROFILE"
          #role-session-name: "example-session"
          #session-duration: 1800
      #- setup_remote_docker
      - run:
          working_directory: ./dotnet-services/user
          name: Create docker image
          command: |
            echo "Getting AWS CLI version..."
            aws --version
            echo "Logging in to ECR... Access key=$AWS_ACCESS_KEY_ID"
            aws ecr get-login-password --region eu-west-1
            echo "Configuring profile..."
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile default
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile default
            echo "Checking credentials..."
            cat ~/.aws/credentials
            echo "Getting sesison token..."
            aws sts get-session-token
            echo "Getting current identity..."
            aws sts get-caller-identity --profile default
            echo "Building the image..."
            docker build . --file ./UserService.Api/Dockerfile --tag userservice
            echo "Tagging the image..."
            docker tag userservice:latest 715815605776.dkr.ecr.eu-west-1.amazonaws.com/userservice:${CIRCLE_BUILD_NUM}
            echo "Logging in to ECR... Access key=$AWS_ACCESS_KEY_ID"
            aws ecr get-login-password --region eu-west-1
            # docker login --username AWS --password-stdin 715815605776.dkr.ecr.eu-west-1.amazonaws.com
            echo "Pushing the image..."
            # docker push 715815605776.dkr.ecr.eu-west-1.amazonaws.com/dev-eu-west-1-ecr-userservice:${CIRCLE_BUILD_NUM}

workflows:
  build:
    jobs:
      - build-and-push-old:
          context: aws
