# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your j2023.05ob to build and test your app, you can rename and customize it as you want.
  build-and-push:
    docker:
      - image: cimg/aws:2023.05
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      AWS_ECR_REGISTRY_ID: ${AWS_ACCOUNT_ID}
      AWS_REGION: eu-west-1
      AWS_RESOURCE_NAME_PREFIX: userservice
    steps:
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-cli-version: latest
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          # dockerfile: myDockerfile
          # executor: aws-ecr/default
          # extra-build-args: '--compress'
          # new-profile-name: newProfileName
          # no-output-timeout: 20m
          path: ./dotnet-services/user/UserService.Api
          # platform: linux/amd64
          # profile-name: myProfileName
          public-registry: false
          push-image: true
          region: $AWS_REGION
          registry-id: AWS_ACCOUNT_ID
          repo: userservice
          # repo-policy-path: repo-policy.json
          # repo-scan-on-push: true
          # role-arn: arn:aws:iam::123456789012:role/testing
          # set-repo-policy: true
          # skip-when-tags-exist: false
          # source-profile: sourceProfileName
          tag: ${CIRCLE_BUILD_NUM}

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build-and-push:
          context: aws