# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your j2023.05ob to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          working_directory: ./dotnet-services/user
          name: Run tests
          command: |
            dotnet test
  build-and-push:
    docker:
      - image: cimg/aws:2023.05
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    steps:
      - checkout
      - setup_remote_docker
      - run:
          working_directory: ./dotnet-services/user
          name: Create docker image
          command: |
            echo "Building the image..."
            docker build . --file ./UserService.Api/Dockerfile --tag userservice:${CIRCLE_BUILD_NUM}
            echo "Logging in to ECR... Access key=$AWS_ACCESS_KEY_ID"
            docker login 715815605776.dkr.ecr.eu-west-1.amazonaws.com
            echo "Tagging the image..."
            docker tag userservice:${CIRCLE_BUILD_NUM} 715815605776.dkr.ecr.eu-west-1.amazonaws.com/userservice:${CIRCLE_BUILD_NUM}
            echo "Pushing the image..."
            docker push 715815605776.dkr.ecr.eu-west-1.amazonaws.com/dev-eu-west-1-ecr-userservice:${CIRCLE_BUILD_NUM}
#  deploy:
#
#    steps:
#      - checkout
#      - run
#        name: Build infrastructure
#        working_directory: .

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - build-and-push:
          context: aws
